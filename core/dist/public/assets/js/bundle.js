(()=>{var o=class{async checkAuth(){let t=localStorage.getItem("ynor_token");if(!t)return null;try{let e=await fetch("/api/auth/verify",{headers:{Authorization:`Bearer ${t}`}});return e.ok?await e.json():null}catch(e){return console.error("Auth verification error:",e),null}}async login(t,e){let i=await fetch("/api/auth/login",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({email:t,password:e})});if(i.ok){let c=await i.json();return localStorage.setItem("ynor_token",c.token),c.user}throw new Error("Login failed")}logout(){localStorage.removeItem("ynor_token")}};var r=class{async getUserShortcuts(t){let e=await fetch(`/api/shortcuts?userId=${t}`,{headers:{Authorization:`Bearer ${localStorage.getItem("ynor_token")}`}});if(e.ok)return await e.json();throw new Error("Failed to fetch shortcuts")}async getShortcut(t){let e=await fetch(`/api/shortcuts/${t}`,{headers:{Authorization:`Bearer ${localStorage.getItem("ynor_token")}`}});if(e.ok)return await e.json();throw new Error("Failed to fetch shortcut")}async createShortcut(t){let e=await fetch("/api/shortcuts",{method:"POST",body:t,headers:{Authorization:`Bearer ${localStorage.getItem("ynor_token")}`}});if(e.ok)return await e.json();throw new Error("Failed to create shortcut")}async deleteShortcut(t){if(!(await fetch(`/api/shortcuts/${t}`,{method:"DELETE",headers:{Authorization:`Bearer ${localStorage.getItem("ynor_token")}`}})).ok)throw new Error("Failed to delete shortcut")}};var n=class{constructor(t){this.app=t,this.routes={"/":this.homeRoute.bind(this),"/login":this.loginRoute.bind(this),"/register":this.registerRoute.bind(this),"/shortcuts":this.shortcutsRoute.bind(this),"/shortcuts/new":this.newShortcutRoute.bind(this)}}handleRoute(){let t=window.location.pathname;(this.routes[t]||this.notFoundRoute.bind(this))()}navigate(t){window.history.pushState({},"",t),this.handleRoute()}async homeRoute(){document.getElementById("content").innerHTML=`
        <h2>Welcome to YNOR Browser</h2>
        <p>Create web shortcuts that work across all devices</p>
        ${this.app.currentUser?'<a href="/shortcuts" class="btn">View Your Shortcuts</a>':`<div class="auth-actions">
            <button id="home-login" class="btn">Login</button>
            <button id="home-register" class="btn">Register</button>
          </div>`}
      `}};var b=new o,E=new r,v=document.getElementById("app"),S=document.getElementById("dashboard-container"),L=document.getElementById("shortcut-container");var s=class{constructor(){this.authService=new o,this.shortcutService=new r,this.router=new n(this),this.currentUser=null,this.init()}async init(){await this.checkAuth(),this.router.handleRoute(),this.setupEventListeners()}async checkAuth(){this.currentUser=await this.authService.checkAuth(),this.updateUI()}updateUI(){let t=document.getElementById("auth-controls");this.currentUser?t.innerHTML=`
        <span>Welcome, ${this.currentUser.email}</span>
        <button id="logout-btn" class="btn">Logout</button>
      `:t.innerHTML=`
        <button id="login-btn" class="btn">Login</button>
        <button id="register-btn" class="btn">Register</button>
      `}setupEventListeners(){document.addEventListener("click",t=>{t.target.id==="logout-btn"&&this.handleLogout(),t.target.id==="login-btn"&&this.router.navigate("/login"),t.target.id==="register-btn"&&this.router.navigate("/register")})}async handleLogout(){await this.authService.logout(),this.currentUser=null,this.updateUI(),this.router.navigate("/")}};document.addEventListener("DOMContentLoaded",()=>new s);})();
